require "rails_helper"

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe "/api/v1/contabil", type: :request do
  before do
    Company.destroy_all
    FactoryBot.create(:contabil_sef)
    FactoryBot.create(:contabil)
    FactoryBot.create_list(:company, 2, status: 'aprobat')
    FactoryBot.create(:company)
  end

  let(:contabil_sef) { User.contabil_sef.first }
  let(:other_role) { FactoryBot.create(:patron) }

  describe "GET /contabil/list_company_requests" do
    it "renders a successful response" do
      get '/api/v1/contabil/list_company_requests', headers: authenticated_header(contabil_sef)
      expect(response).to be_successful
      expect(json.size).to eq(1)
    end

    it "returns 403 if not role contabil_sef" do
      get "/api/v1/contabil/list_company_requests", headers: authenticated_header(other_role)
      expect(response).to be_forbidden
    end
  end

  describe "POST /contabil/approve_company" do
    it "renders a successful response" do
      post '/api/v1/contabil/approve_company', as: :json,
        params: {company_id: Company.last.id}, 
        headers: authenticated_header(contabil_sef)
      expect(response).to be_no_content
    end

    it "changes Company.status to aprobat" do
      expect{
        post '/api/v1/contabil/approve_company', as: :json,
          params: {company_id: Company.last.id}, 
          headers: authenticated_header(contabil_sef)
      }.to change{ Company.last.status }.to('aprobat')
    end

    it "returns 403 if not role contabil_sef" do
      post '/api/v1/contabil/approve_company', as: :json,
        params: {company_id: Company.last.id}, 
        headers: authenticated_header(other_role)
      expect(response).to be_forbidden
    end
  end

  describe "POST /contabil/reject_company" do
    it "renders a successful response" do
      post '/api/v1/contabil/reject_company', as: :json,
        params: {company_id: Company.last.id}, 
        headers: authenticated_header(contabil_sef)
      expect(response).to be_no_content
    end

    it "removes company_user" do
      expect{
        post '/api/v1/contabil/reject_company', as: :json,
          params: {company_id: Company.last.id}, 
          headers: authenticated_header(contabil_sef)
      }.to change(Company, :count).by(-1)
    end

    it "returns 403 if not role contabil_sef" do
      post '/api/v1/contabil/reject_company', as: :json,
        params: {company_id: Company.last.id}, 
        headers: authenticated_header(other_role)
      expect(response).to be_forbidden
    end
  end
end
