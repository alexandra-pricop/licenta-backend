require "rails_helper"

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe "/api/v1/angajat", type: :request do
  before do
    Company.destroy_all
    FactoryBot.create(:company)
    FactoryBot.create(:angajat)
  end
  
  let(:company) { Company.first }
  let(:angajat) { User.angajat.first }
  let(:other_role) { FactoryBot.create(:contabil) }


  describe "POST /angajat/join_company" do
    context "with valid parameters" do
      it "renders a successful response" do
        post "/api/v1/angajat/join_company", params: { cui: company.cui }, headers: authenticated_header(angajat)
        expect(response).to be_no_content
      end

      it "creates a new CompanyUser" do
        expect {
          post "/api/v1/angajat/join_company", params: { cui: company.cui }, headers: authenticated_header(angajat)
        }.to change(CompanyUser, :count).by(1)
      end
    end

    context "with invalid parameters" do
      it "returns a unprocessable_entity response" do
        post "/api/v1/angajat/join_company", params: { cui: '000000' }, headers: authenticated_header(angajat)
        # expect(response).to be_unprocessable_entity
        expect(response).to have_http_status(422)
      end
    end

    it "returns 403 if not role angajat" do
      post "/api/v1/angajat/join_company", params: { cui: company.cui }, headers: authenticated_header(FactoryBot.create(:patron))
      expect(response).to be_forbidden
    end
  end

  describe "GET /angajat/list_requests" do
    before do
      FactoryBot.create(:company_user, user: angajat, status: 'aprobat')
      FactoryBot.create_list(:company_user, 2, user: angajat)
    end

    it "renders a successful response" do
      get '/api/v1/angajat/list_requests', headers: authenticated_header(angajat)
      expect(response).to be_successful
      expect(json.size).to eq(2)
    end

    it "returns 403 if not role patron" do
      get "/api/v1/angajat/list_requests", headers: authenticated_header(FactoryBot.create(:patron))
      expect(response).to be_forbidden
    end
  end
end
