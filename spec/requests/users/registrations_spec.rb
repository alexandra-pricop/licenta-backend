require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe "/users", type: :request do
  
  let(:valid_attributes) {
    FactoryBot.build(:patron).attributes.merge(password: '12345678')
  }

  let(:invalid_attributes) {
    FactoryBot.build(:contabil_sef).attributes.merge(password: '12345678')
  }


  describe "POST /users" do
    context "with valid parameters" do
      it "creates a user" do
        expect {
          post '/users', params: { user: valid_attributes }
        }.to change(User, :count).by(1)
      end
    end

    context "with invalid parameters" do
      it "throws error when new User is not patron/angajat" do
        expect {
          post '/users', params: { user: invalid_attributes }
        }.to raise_error(Apipie::ParamInvalid)
      end
    end
  end

end
